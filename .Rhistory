(1.07-0.78)/0.52
(1.08-0.78)/0.52
pi <- (1.08-0.78)/0.52
(pi*14.5-(1-pi)*0)/1+0.08
pi <- (1.08-0.78)/0.52
(pi*14.5-(1-pi)*0)/1+0.08
pi
pi*14.5
(pi*14.5-(1-pi)*0)/(1+0.08)
0.75/(1+0.02/4)+0.75/(1+0.04/4)+0.75/(1+0.06/4)+0.75/(1+0.08/4)
(100-0.75/(1+0.02/4)+0.75/(1+0.04/4)+0.75/(1+0.06/4)+0.75/(1+0.08/4))*1.02
(100-0.75/(1+0.02/4)-0.75/(1+0.04/4)-0.75/(1+0.06/4)-0.75/(1+0.08/4))*1.02
(100-0.75/(1.02)^(1/4)-0.75/(1.02)^(1/2)-0.75/(1.02)^(3/4)-0.75/(1.02)^(1))*1.02
10.35-9.25+100/1.02
-108.5/3100
13.5/900
37.5/1500
13.5/900
37.5/1500
-108.5/3100
13.5/900
0.05*2
-108.5/3100
37.5/1500
1/1.08
(1-1/1.08)/(1/(1+0.072/2)+1/(1+0.08))
(1-1/1.08)/(1/(1+0.072/2)+1/(1+0.08))*2
a<-(1-1/1.08)/(1/(1+0.072/2)+1/(1+0.08))
a
a/(1+0.071/4)+(1+a)/(1+0.074*3/4)
a/(1+0.071/4)+(1+a)/(1+0.074*3/4)*15
(a/(1+0.071/4)+(1+a)/(1+0.074*3/4))*15
105000-750000*0.12
0.6*0.15
1/09*4000
1.09*4000
62000/1.09*4000
62000/(1.09*4000)
62000*1.09/(1.09*4000)
0.75/(1+0.38)*(1+0.45)
0.01+0.08*0.82+0.02*0.75+0.04*0.15
45/2.75/1.03
1/(45/2.75/1.03)
1/(45/2.75/1.03)+0.03
1/(45/2.75/1.03)+0.03
0.72/(0.0726-0.035)
0.72*0.965/(0.0726-0.035)
0.72*1.035/(0.0726-0.035)
0.72/(0.0726-0.035)
5.65+6.25*0.28-0.37*0.9+15.48*0.035
0.72*0.0833
(500*0.7+100-90-25+80)/75
(500*0.7+100-90-25+80)/75/(0.0726-0.06)
(500*0.7+100-90-25+80)/75/(0.0726-0.72*0.0833)
(500*0.7+100-90-25)/75/(0.0726-0.72*0.0833)
(500*0.7+100*0.3-90-25)/75/(0.0726-0.72*0.0833)
(500*0.7+100*0.3-90-25-80)/75/(0.0726-0.72*0.0833)
0.72*0.0833
62000*1.09/(1.09*4000)
(500+100-90-25+80
)
(500+100-90-25+80)/(0.1-0.72*0.0833)
g<-0.72*0.0833
g
(500+100-90-25+80)*g/(0.1-0.72*g)
(500+100-90-25+80)*g/(0.1-0.72*g)
0.72*g
g
g<-0.72*0.0833
g
g<-0.68*0.0833
(500+100-90-25+80)*g/(0.1-0.72*g)
g
0.72*g
0.68*g
0.1-g
g
(500+100-90-25+80)*g/(0.1-g)
(500+100-90-25+80)
g
(500+100-90-25+80)*(1+g)
(500+100-90-25+80)*(1+g)/(0.1-g)
(500+100-90-25+80)*(1+g)/(0.1-g)/75
g
g<-0.056
(500+100-90-25+80)*(1+g)/(0.1-g)/75
0.8/(1+0.4/0.6)
0.8/(1+0.4/0.6)*(1+0.75)
446*0.25*1.05/4821/(0.045)
446*0.25*1.05/(0.045)
446*0.25*1.05/(0.045)
(0.045)
446*0.25*1.05/(0.045)/4821
(446-5284*0.095)/(446+171+964+161)
5284*0.095
0.9/(1+0.4/0.6)*(1+0.75)
(5284+2687+1210-1260-486)/(446+171+964+161)
1.3*5.2-0.2*2-0.3*4.3+0.1*3.7
1.3*5.2-0.2*2-0.3*4.3
1.3*5.2-0.2*2-0.3*4.3 + 4.1
57/3.6
57/(3.6*1.15)
install.packages("sendmailR")
library(sendmailR)
from <- "huangjiawei679@gmail.com"
to <- "huangjiawei579@gmail.com"
subject <- "Performance Result"
body <- "This is the result of the test:"
mailControl=list(smtpServer="snmpt server address")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
mailControl=list(smtpServer="ASPMX.L.GOOGLE.COM")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
1+1
?sendmail
2596-1449+2418
1.6/(1+0.6/0.4)*(1+0.2/0.8)
5.33*0.6/0.124
70-5.33*0.6/0.124
70-5.33*0.6*1.04/(0.124-1.04)
5.33*0.6*1.04/(0.124-1.04)
5.33*0.6*1.04/(0.124-0.04)
70-5.33*0.6*1.04/(0.124-0.04)
5.33*0.6/0.124
70-5.33*0.6/0.124
d <- 5.33*0.6
d
d*1.04/0.084+d*5*0.11/0.084
8-20.97*0.124
a<-8-20.97*0.124
a*1.15^5
a*1.15^5/(0.106-0.05)
a
70-5.33/0.124
d
a<-8-20.97*0.124
a
a*1.15^5
a/0.124
a*1.15^5
a*1.15^5/0.124
a*1.15^5/0.124/1.124^5
a*1.15^5/0.124/1.124^5
0.1*0.75*0.3+0.7*(0.039+0.06+0.025+0.015)
0.1*0.75*0.3
(0.039+0.06+0.025+0.015)
0.1*0.75*0.3+0.7*(0.039+0.06+0.025+0.015-0.01)
7.2*1.25
7.2*1.25*105.1
7.2*1.25*105.1-48
1/1.3
7.2*1.25
7.2*1.25*105.1
7.2*1.25*105.1-30+50
0.08*0.8*1.048/(0.13-0.048)
8.6+4.45+1.6+1.45
8.6-4.45+1.6+1.45
a <- 467.25;
r<-1.096;
a*1.15/r+a*1.15^2/r^2+a*1.15^2*1.1/r^3+a*1.15^2*1.1^2/r^4+a*1.15^2*1.1^2*1.03/(0.096-0.03)
a*1.15/r+a*1.15^2/r^2+a*1.15^2*1.1/r^3+a*1.15^2*1.1^2/r^4+a*1.15^2*1.1^2*1.03/(0.096-0.03)/r^4
84-36*0.6+52
(84-36*0.6+52)/(0.115-0.03)
(84-36*0.6+52)*1.03/(0.115-0.03)
8.6+1.6+1.45-0.85
(709+136-638-123)
626+243+186*0.68-(709+136-638-123)
500-186*0.68+(2783+2249-2678-2449)
(2783+2249-2678-2449)
500-186*0.68
600/0.04
(600/0.04 - 1290)/411
(600/0.04 - 2783-2249)/411
2783-2249
- 2783-2249
(1-1.04/1.09)
600/(1-1.04/1.09)
(600/(1-1.04/1.09) - 2783-2249)/411
(709+136-638-123)
626+243+186*0.68-(709+136-638-123)-535
709+136-638-123
2783+2249-2678-2449
- 2783-2249
2.35*7.1+5
1.35*7.1+5
2.84/0.146
29.64-2.84/0.146
a<-2.45
g <- 0.184*0.6
g
a*1.44*1.02*0.4/(0.16-g)
a
a*1.44*1.02*0.4/(0.16-g)/1.16^2 + a*1.44/1.16^2 + a*1.2/1.16
a*1.44*1.02*0.4/(0.16-g)/1.16^2 + a*1.44*0.4/1.16^2 + a*1.2*0.4/1.16
a*1.2*0.4
a*1.2*0.4/1.16
a*1.44*1.02
a
a*1.44
a*1.44*1.02*0.4
a*1.44*1.02*0.4/(0.16-g)
g
g <- 0.184*0.6
g
g <- 0.02
a*1.44*1.02*0.4/(0.16-g)/1.16^2 + a*1.44*0.4/1.16^2 + a*1.2*0.4/1.16
1/1.0852
(1/0.8163)^(1/3)
1/0.8163/0.0852
1/0.8163/1.0852
(1/0.8163/1.0852)^0.5
(1/0.8163)^(1/3)
4/1.0055+4/1.062479^2+4/1.007^3+104/1.0825^4
4/1.0789+4/1.0789^2+4/1.0789^3+104/1.0789^4
4/1.0055+4/1.062479^2+4/1.007^3+104/1.0825^4
4/1.0789+4/1.0789^2+4/1.0789^3+104/1.0789^4
4/1.0055+4/1.062479^2+4/1.007^3+104/1.0825^4
4/1.0789+4/1.0789^2+4/1.0789^3+104/1.0789^4
4/1.0055+4/1.062479^2+4/1.007^3+104/1.0825^4
4/1.0055+4/1.062479^2+4/1.07^3+104/1.0825^4
105/1.03^6
0.02+0.045*0.81-0.012*-0.15+0.052*1.23
95000-183109*0.15
(95000-183109*0.15)*0.6
(102750-183109*0.12)*0.6
(102750-300000*0.12)*0.6
425500/1.15+510600/1.15^2+663780/1.15^3+531024/1.15^4
510600/1.15+663780/1.15^2+531024/1.15^3
121650/1.15+147180/1.15^2+193134/1.15^3+165307/1.15^4
147180/1.15+193134/1.15^2+165307/1.15^3
193134/1.15^1+165307/1.15^2
193134/1.15^1+165307/1.15^2
193134/1.15^1+165307/1.15^2 -147180/1.15+193134/1.15^2+165307/1.15^3
193134/1.15^1+165307/1.15^2 -147180/1.15+193134/1.15^2+165307/1.15^3 + 147180
193134/1.15^1+165307/1.15^2 -147180/1.15+193134/1.15^2+165307/1.15^3
193134/1.15^1+165307/1.15^2
147180/1.15+193134/1.15^2+165307/1.15^3
193134/1.15^1+165307/1.15^2 -147180/1.15+193134/1.15^2+165307/1.15^3
193134/1.15^1+165307/1.15^2 -147180/1.15+193134/1.15^2+165307/1.15^3  + 147180
193134/1.15^1+165307/1.15^2
-(147180/1.15+193134/1.15^2+165307/1.15^3)
193134/1.15^1+165307/1.15^2 -(147180/1.15+193134/1.15^2+165307/1.15^3) + 147180
3360 * 0.325
1365 - 3360 * 0.325
goodwill <- 1365 - 3360 * 0.325;
1365-goodwill/10
1264.51 - 940
280+185+40+26
8*14
280+185+8*14
goodwill
1442*0.71
10257/332
(5311-110)/332
-2000 + 5000 + 15000*0.4
15000*0.4
15000*0.4
15000*0.4
-2000 + 5000 + 15000*0.4
-2000+3000+10000+15000*0.4
-2000+3000+10000+15000
-2000 + 5000 + 15000
23+45+110
4000+9000
1365 - 0.325*3360
2964*0.325
1365 + 1200*0.325 - 504*0.325 - 2964*0.325/10
2964*0.325/10
1365 + 1200*0.325 - 504*0.325 - 2280*0.325/10
2964*0.325/10
1365 + 1200*0.325 - 504*0.325 - 2964*0.325/10
1264.51-940
280000+185000+14*8
280000+185000+14*8000000
280+185+14*8000
280+185+14*8
2280*0.325/10
1365 + 1200*0.325 - 504*0.325 - 2280*0.325/10
1365 - 0.325*3360
1365 + 1200*0.325 - 504*0.325 - 684*0.325/10
0.015*1.0264 + -0.01*0.3625 - 0.0069
0.015*1.0264 + -0.01*0.3625 - 0.0069
0.015*1.0264 -0.01*0.3625 - 0.0069
0.015*1.0264 -0.01*0.3625 - 0.000069
0.031 -0.732*log(1+0.03)
exp(0.031 -0.732*log(1+0.03)) - 1
exp(0.031 -0.732*log(1+0.03))
exp(0.031 -0.732*log(1+0.03)) - 1
0.002381/(1-0.235546)
0.170498519/56
0.170498519/57
0.170498519/57
library(rgdal)
install.packages("rgdal","ggplot2","ggthemes")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("ggthemes")
library(rgdal)
library(ggplot2)
library(ggthemes)
world <- readOGR("countries.geo.json", "OGRGeoJSON", stringsAsFactors=FALSE)
getwd()
world <- readOGR("./quakefile/countries.geo.json", "OGRGeoJSON", stringsAsFactors=FALSE)
world
plates <- readOGR("./quakefile/plates.json", "OGRGeoJSON", stringsAsFactors=FALSE)
quakes <- readOGR("./quakefile/quakes.json", "OGRGeoJSON", stringsAsFactors=FALSE)
world_map <- fortify(world)
plates_map <- fortify(plates)
quakes_dat <- data.frame(quakes)
quakes_dat$trans <- quakes_dat$mag %% 5
gg <- ggplot()
gg <- gg + geom_map(data=world_map, map=world_map,
aes(x=long, y=lat, map_id=id),
color="white", size=0.15, fill="#d8d8d6")
gg <- gg + geom_map(data=plates_map, map=plates_map,
aes(x=long, y=lat, map_id=id),
color="black", size=0.1, fill="#00000000", alpha=0)
gg <- gg + geom_point(data=quakes_dat,
aes(x=coords.x1, y=coords.x2, size=trans),
shape=1, alpha=1/3, color="#d47e5d", fill="#00000000")
gg <- gg + geom_point(data=subset(quakes_dat, mag>7.5),
aes(x=coords.x1, y=coords.x2, size=trans),
shape=1, alpha=1, color="black", fill="#00000000")
gg <- gg + geom_text(data=subset(quakes_dat, mag>7.5),
aes(x=coords.x1, y=coords.x2, label=sprintf("Mag %2.1f", mag)),
color="black", size=3, vjust=c(3.9, 3.9, 5), fontface="bold")
gg <- gg + scale_size(name="Magnitude", trans="exp", labels=c(5:8), range=c(1, 20))
gg <- gg + coord_map("mollweide")
gg <- gg + theme_map()
gg <- gg + theme(legend.position=c(0.05, 0.99))
gg <- gg + theme(legend.direction="horizontal")
gg <- gg + theme(legend.key=element_rect(color="#00000000"))
gg
install.packages("mapproj")
library(rgdal)
library(ggplot2)
library(ggthemes)
world <- readOGR("./quakefile/countries.geo.json", "OGRGeoJSON", stringsAsFactors=FALSE)
plates <- readOGR("./quakefile/plates.json", "OGRGeoJSON", stringsAsFactors=FALSE)
quakes <- readOGR("./quakefile/quakes.json", "OGRGeoJSON", stringsAsFactors=FALSE)
world_map <- fortify(world)
plates_map <- fortify(plates)
quakes_dat <- data.frame(quakes)
quakes_dat$trans <- quakes_dat$mag %% 5
gg <- ggplot()
gg <- gg + geom_map(data=world_map, map=world_map,
aes(x=long, y=lat, map_id=id),
color="white", size=0.15, fill="#d8d8d6")
gg <- gg + geom_map(data=plates_map, map=plates_map,
aes(x=long, y=lat, map_id=id),
color="black", size=0.1, fill="#00000000", alpha=0)
gg <- gg + geom_point(data=quakes_dat,
aes(x=coords.x1, y=coords.x2, size=trans),
shape=1, alpha=1/3, color="#d47e5d", fill="#00000000")
gg <- gg + geom_point(data=subset(quakes_dat, mag>7.5),
aes(x=coords.x1, y=coords.x2, size=trans),
shape=1, alpha=1, color="black", fill="#00000000")
gg <- gg + geom_text(data=subset(quakes_dat, mag>7.5),
aes(x=coords.x1, y=coords.x2, label=sprintf("Mag %2.1f", mag)),
color="black", size=3, vjust=c(3.9, 3.9, 5), fontface="bold")
gg <- gg + scale_size(name="Magnitude", trans="exp", labels=c(5:8), range=c(1, 20))
gg <- gg + coord_map("mollweide")
gg <- gg + theme_map()
gg <- gg + theme(legend.position=c(0.05, 0.99))
gg <- gg + theme(legend.direction="horizontal")
gg <- gg + theme(legend.key=element_rect(color="#00000000"))
gg
gg
gg <- ggplot()
gg
gg <- gg + geom_map(data=world_map, map=world_map,
aes(x=long, y=lat, map_id=id),
color="white", size=0.15, fill="#d8d8d6")
gg
plot(1:10)
plot(mtcars)
1
1
dit()
dir()
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x,y)
vector(1,2)
?vector
?vector
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
mode(x[[1]])
ls()
dir()
data <- read.csv("./Desktop/hw1_data.csv")
head(data)
dim(data)
data[(nrow(data)-1):nrow(data),]
data[47,]
is.na(data$Ozone)
sum(is.na(data$Ozone))
mean(data$Ozone,na.rm=TRUE)
data[data$Ozone>31&data$Temp>90,]$Solar.R
mean(data[data$Ozone>31&data$Temp>90,]$Solar.R)
mean(data[data$Ozone>31&data$Temp>90,]$Solar.R,na.rm=TRUE)
data[data$Month==6,]$Temp
mean(data[data$Month==6,]$Temp)
max(data[data$Month==5,]$Temp)
max(data[data$Month==5,]$Ozone)
max(data[data$Month==5,]$Ozone,na.rm=TRUE)
colnames(daa)
colnames(data)
install.packages("swirl")
library(swirl)
rm(list=ls())
library(swirl)
package(swirl)
packageVersion(swirl)
packageVersion("swirl")
install_from_swirl("R Programming")
swirl()
2
0
5+7
0
0
0
quit()
library(car) #vif, influencePlot
library(reshape2)
library(gap) #chow test
install.packages("gap")
library(gap) #chow test
library(urca) #ca.jo
library(lmtest) #bptest
library(tseries);
library(corrplot);
library(xtable);
library(ggplot2);
library(gridExtra);
library(grid)
library(gtable)
library(forecast);
library(xts);
require(timeDate)
library(cvTools)
library(sandwich)
library(TTR)
install.packages("corrplot")
install.packages("xtable")
install.packages("cvTools")
library(xlsx);
library(gap) #chow test
library(urca) #ca.jo
library(lmtest) #bptest
library(tseries);
library(corrplot);
library(xtable);
library(ggplot2);
library(gridExtra);
library(grid)
library(gtable)
library(forecast);
library(xts);
require(timeDate)
library(cvTools)
library(sandwich)
library(TTR)
setwd("/Users/charleshjw/Workspace/FeeRevenue");
source("./Library/Functions.R");
source("./Library/Functions-Revenue.R");
source("./Library/Functions-MovingAverage.R");
source("./Library/Functions-SeasonalDecomposition.R");
source("./Library/Functions-RegressionModel.R");
source("./Library/Functions-Production.R");
source("./Library/Functions-TimeSeriesModel.R");
EXECUTE_PRODUCTION <- TRUE;
revenue_threshold <- 1000000 #if the sum last 12 month revenue < threshold, it will not be analyzed.
threshold <- 0.05; #threshold to pass or fail statistical test
Color_black <- "#000000";
Color_baseline <- "#22DD26";
#Color_adverse <- "#FFDE0F";
Color_severe <- "#EE2724";
Color_adverse <- Color_severe;
Color_bhc <- Color_severe;
#Color_bhc <- "#661DE8";
Color_history <- "#0094FF";
Color_backtest <- Color_black;
max_segments <- 3;
revenue_file_version <- "./Library/Data/RevenuebyLOBv0.3.xlsx";
Macro_file <- "./Library/Data/Masterfile-Data Process-11-17-16.xlsx";#Newest Version
variable_file_version <- "./Data/VariableSelection-Revenue-CCAR.xlsx";
Output_root <- "../Revenue-Results/Output-Q22016-CCAR11172016/";
if (!dir.exists(Output_root)) {
dir.create(Output_root);
}
Time_periods <- 1:114;
Time_periods_Q <- 1:38;
dir.exists
dir.create
dir.exists
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
dir.exists
Output_root <- "../Revenue-Results/Output-Q22016-CCAR11172016/";
if (!dir.exists(Output_root)) {
dir.create(Output_root);
}
